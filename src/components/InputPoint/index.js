import React from 'react';
import s from './style.css';
import {mainStore} from '../../data/Stores';
import Dispatcher from '../../data/appDispatcher';
import keyMirror from 'fbjs/lib/keyMirror';
import updatePointsAndLinesOnMap from '../YandexMap/updatePointAndLinesOnMap'

const actions = keyMirror({
  ADD_ENTRY_POINT: null,
  CHANGE_ENTRY_POINT: null,
  DEL_ALL_POINTS: null,
  YANDEX_MAP_SET_CENTER: null,
  SHOW_ALERT: null,
});

Dispatcher.register((action) => {
  switch (action.type) {
    case actions.ADD_ENTRY_POINT:
      mainStore.Container.points.push(action.value);
      mainStore.setState('Container', mainStore.Container); // —Ç—É—Ç —è –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é. –ù–∞–≤–µ—Ä–Ω–æ–µ –ª—É—á—à–µ –±—É–¥–µ—Ç –µ—Å–ª–∏ –º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ points. –ù—É –ø–æ–∫–∞ —Ç–∞–∫ –ø—É—Å—Ç—å –ø–æ–±—É–¥–µ—Ç.
      break;
    case actions.CHANGE_ENTRY_POINT:
      mainStore.Container.points[action.id] = action.value;
      mainStore.emitChange();
      break;
    case actions.DEL_ALL_POINTS:
      mainStore.Container.points = [];
      mainStore.YandexMap.coordsArr = [];
      mainStore.YandexMap.myGeoObjectCollectionLines.removeAll();
      mainStore.YandexMap.myGeoObjectCollectionPoints.removeAll();
      mainStore.setState('Container', mainStore.Container); // –∏ —Ç—É—Ç —è –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é. –ù–∞–≤–µ—Ä–Ω–æ–µ –ª—É—á—à–µ –±—É–¥–µ—Ç –µ—Å–ª–∏ –º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ points. –ù—É –ø–æ–∫–∞ —Ç–∞–∫ –ø—É—Å—Ç—å –ø–æ–±—É–¥–µ—Ç.
      break;
    case actions.SHOW_ALERT:
        mainStore.showAlert = true;
        mainStore.emitChange();
        setTimeout(()=>{
          mainStore.showAlert = false;
          mainStore.emitChange();
        },2000)
      break;
    default:
      return null;
  }
})

export default class InputPoint extends React.Component {
  constructor(props) {
    super(props);
    this.myRef = React.createRef(); // TODO: [üê±üëÄ] –ù–µ —è—Å–Ω–æ, –∑–∞—á–µ–º –∑–¥–µ—Å—å ref
    this.state = mainStore.InputPoint;
  }

  handleKeyPress(event) {
    if (event.key === 'Enter') {
      // TODO: [üê±üëÄ] –ó–¥–µ—Å—å –∏ –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö let –≤–º–µ—Å—Ç–æ const
      let value = event.target.value;
      let idPoint = mainStore.Container.points.length;
      Dispatcher.dispatch({
        type: actions.ADD_ENTRY_POINT,
        value: value
      })
      this.addPointsAndLinesOnYandexMap(value, idPoint);
      event.target.value = '';
    }
  }

  addPointsAndLinesOnYandexMap(value, idPoint) {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç—É
    mainStore.YandexMap.ymaps.ready(() => {
      mainStore.YandexMap.ymaps.geocode(value)
      .then(
        function (res) {
          let myGeoCodeResult = res.geoObjects.get(0);
          if (myGeoCodeResult) {
            let coords = myGeoCodeResult.geometry.getCoordinates(); // –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏
            return coords;
          } else {
            console.log('–æ—à–∏–±–∫–∞ –≤ myGeoCodeResult', myGeoCodeResult);
            // –ï—Å–ª–∏ –≥–µ–æ–∫–æ–¥–µ—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª, —Ç–æ –Ω–∞–¥–æ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –æ —Ç–æ—á–∫–µ –∏–∑ –º–µ–Ω—é –∏ –∏–∑ mainStore. –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
            Dispatcher.dispatch({
              type: 'REMOVE_ENTRY_POINT',
              id: idPoint
            })
            Dispatcher.dispatch({
              type: actions.SHOW_ALERT,
              showAlert: true,
            })
            return false;
          }
        },
        function (err) {
          console.log('–æ—à–∏–±–∫–∞ –≤ geocode', err);
        }
      ).then(
        (coords) => {
          if (coords) {
            mainStore.YandexMap.coordsArr.push(coords);
            mainStore.YandexMap.myMap.setCenter(coords);
            updatePointsAndLinesOnMap();
          }
        },
        (err) => { console.log('–æ—à–∏–±–∫–∞2 –≤ geocode', err); }
      )
    })

  }

  deleteAllPoints() {
    Dispatcher.dispatch({
      type: actions.DEL_ALL_POINTS
    })
  }

  render() {
    return (
      <label>
        <input type="text" id="InputPoint" className={s.main} defaultValue={''} onKeyPress={this.handleKeyPress.bind(this)} autoFocus ref={this.myRef} />
        <span className={s.delete} onClick={this.deleteAllPoints.bind(this)}>CLEAR</span>
      </label>
    )
  }
}


/* 
–ú—ã—Å–ª–∏. –ó–∞–º–µ—Ç–∫–∏. –ò–¥–µ–∏.

–ê–ª–≥–æ—Ä–∏—Ç–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫–∏ –∏ —Å–æ–µ–¥–∏–Ω—è—é—â–∏—Ö –∏—Ö –ª–∏–Ω–∏–π. 

–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –º–∞—Å—Å–∏–≤ points
–ü–æ—Å–ª–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
–°–æ–∑–¥–∞—ë–º –≥–µ–æ–æ–±—ä–µ–∫—Ç "—Ç–æ—á–∫–∞" —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏. 
–î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ "coords" –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –¥–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏. 
–î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç—É. 
–£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ–±—ä–µ–∫—Ç "–ª–æ–º–∞–Ω–∞—è –ª–∏–Ω–∏—è" —Å –∫–∞—Ä—Ç—ã –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç "coords"
–î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –∫–∞—Ä—Ç—É "–ª–æ–º–∞–Ω—É—é –ª–∏–Ω–∏—é".

–ê–ª–≥–æ—Ä–∏—Ç–º —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ—á–∫–∏
–£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞ points
–£–¥–∞–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ—é –µ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ coords (–ø–æ-–∏–¥–µ–µ —É –Ω–∏—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã)
–ó–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç—ã "–ª–æ–º–∞–Ω–∞—è –ª–∏–Ω–∏—è" –Ω–∞ –∫–∞—Ä—Ç–µ. –¢.–µ. —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç 
—Å–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –∫–∞—Ä—Ç—É –Ω–æ–≤—ã–µ.
–ü—Ä–∏ –∑–∞–º–µ–Ω–µ –º–µ—Å—Ç–∞–º–∏ –≤ —Å–ø–∏—Å–∫–µ —Ç–æ—á–µ–∫, –¥–µ–ª–∞–µ–º —Ç–æ–∂–µ —Å–∞–º–æ–µ. 

*/